name: Test CI
on:
  pull_request:

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      test: ${{ steps.filter.outputs.test }}
      test2: ${{ steps.filter.outputs.test2 }}
    steps:
      # For pull requests it's not necessary to checkout the code
      - uses: dorny/paths-filter@v2.10.2
        id: filter
        with:
          filters: |
            test:
              - 'testFolder/**'
            test2:
              - 'testFolder2/**'
    #TEST 1
  cargo-format:
    name: cargo-format
    needs: changes
    if: ${{ needs.changes.outputs.test }}
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - run: exit 0
  cargo-test:
    name: cargo-test
    needs: changes
    if: ${{ needs.changes.outputs.test }}
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - run: exit 0
  cargo-ok:
    name: cargo-ok
    needs: 
      - cargo-format
      - cargo-test
    if: ${{ needs.changes.outputs.test }}
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - run: exit 0

  #   #TEST2
  cargo-format2:
    name: cargo-format2
    needs: changes
    if: ${{ needs.changes.outputs.test2 }}
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - run: exit 0
  # cargo-test2:
  #   name: cargo-test2
  #   needs: [changes, cargo-test]
  #   if: ${{ always }}
  #   runs-on: ubuntu-20.04
  #   timeout-minutes: 5
  #   steps:
  #     - name: Rust result
  #       run: |
  #         if( needs.cargo-test.result == 'failure' )
  #         then
  #           exit 1
  #     - run: exit 0
  # cargo-ok2:
  #   name: cargo-ok2
  #   needs: 
  #     - cargo-format2
  #     - cargo-test2
  #   if: ${{ needs.changes.outputs.test2 }}
  #   runs-on: ubuntu-20.04
  #   timeout-minutes: 5
  #   steps:
  #     - run: exit 0

      
