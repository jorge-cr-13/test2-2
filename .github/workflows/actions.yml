name: Test CI
on:
  pull_request:

jobs:
  # JOB to run change detection
  selection:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      dart: ${{ steps.filter.outputs.dart }}
      dart2: ${{ steps.filter.outputs.dart2 }}
    steps:
      # For pull requests it's not necessary to checkout the code
      - run: exit 1
      - uses: dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721
        id: filter
        with:
          filters: |
            dart:
              - 'dartFolder/**'
              - 'dartFolder2/**'
            rust:
              - 'dartFolder2/**'
    #TEST 1
  cargo-format:
    name: cargo-format
    needs: selection
    if: ${{ needs.selection.outputs.dart == 'true' }}
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - run: exit 0
  cargo-test:
    name: cargo-test
    needs: selection
    if: ${{ needs.selection.outputs.dart == 'true' }}
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - run: exit 0
  cargo-ok:
    name: cargo-ok
    needs: 
      - cargo-format
      - cargo-test
    if: ${{ needs.selection.outputs.dart == 'true' }}
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - run: exit 0

  #   #TEST2
  cargo-format2:
    name: cargo-format2
    needs: selection
    if: ${{ needs.selection.outputs.rust }}
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - run: exit 0
  cargo-test2:
    name: cargo-test2
    needs: selection
    if: ${{ needs.selection.outputs.rust }}
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - name: Rust result
        run: |
          if( needs.cargo-test.result == 'failure' )
          then
            exit 1
          fi
      - run: exit 0
  cargo-ok2:
    name: cargo-ok2
    needs: 
      - cargo-format2
      - cargo-test2
    if: ${{ needs.selection.outputs.rust }}
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - run: exit 0

    ci-ok:
    name: ci-ok
    needs: [selection, cargo-ok2, cargo-ok]
    if: ( ${{always()}} ) && ( ${{ needs.selection.outputs.cargo-ok == 'true' || ${{ needs.selection.outputs.cargo-ok2 == 'true' }} )
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - name: CI OK Testing
        run: |
          if [[ ( (needs.selection.outputs.dart != 'true' || needs.cargo-ok.result == 'success') && (needs.selection.outputs.rust != 'true' || needs.cargo-ok2.result == 'success') ) || 
           (needs.selection.outputs.rust == 'true' && needs.cargo-ok2.result == 'success' && needs.selection.outputs.dart != 'true')
           ]]
          then
            exit 0
          else
            exit 1
          fi
            

      
